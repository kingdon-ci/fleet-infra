apiVersion: templates.weave.works/v1alpha2
kind: GitOpsTemplate
metadata:
  name: big-example
  namespace: vcluster
  annotations:
    # templates.weave.works/kustomizations-enabled: "true"
  labels:
    weave.works/template-type: application
spec:
  description: Another simple example app
  renderType: templating
  params:
    - name: RESOURCE_NAME
      description: Unique name for the created resources
      options: [example-02]
      default: example-02
      required: true
    - name: REPO_URL
      required: true
      description: Git repository containing the application
      default: "https://github.com/kingdonb/podinfo"
    - name: REPO_NAME
      required: true
      description: Git repository containing the application (as a slug)
      default: "podinfo"
    - name: GIT_BRANCH
      required: true
      description: Git branch to deploy from
      default: "master"
    - name: NAMESPACE
      required: true
      description: Deploy flux resources to namespace
      default: "default"
    - name: OVERLAY
      required: true
      description: Deploy Overlay in the Git repository to apply
      options:
        - automate
        - dev
        - experiment
        - flux-oci
        - helm-oci
        - production
        - staging
        - test-example
      default: "flux-oci"
  resourcetemplates:
    - path: clusters/default/cluster-02/{{ .params.RESOURCE_NAME }}-app.yaml
      content:
        - apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ .params.REPO_NAME }}"
        - apiVersion: source.toolkit.fluxcd.io/v1beta2
          kind: GitRepository
          metadata:
            name: "{{ .params.RESOURCE_NAME }}"
            namespace: "{{ .params.NAMESPACE }}"
          spec:
            interval: 20s
            url: '{{ .params.REPO_URL }}'
            ref:
              branch: "{{ .params.GIT_BRANCH }}"
        - apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
          kind: Kustomization
          metadata:
            name: "{{ .params.RESOURCE_NAME }}"
            namespace: "{{ .params.NAMESPACE }}"
          spec:
            interval: 30s
            path: "./deploy/overlays/{{ .params.OVERLAY }}"
            prune: true
            sourceRef:
              kind: GitRepository
              name: "{{ .params.RESOURCE_NAME }}"
